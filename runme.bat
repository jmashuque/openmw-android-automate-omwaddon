@echo off

REM default is the android openmw.cfg as well as the omwllf and delta folders
REM all reside in the same folder as this batch file, but you can modify it
REM all, by default the android openmw.cfg will be in
REM /sdcard/omw_nightly/config

REM note: this batch file assumes all folders exist and contain the right
REM files, all .cfg and .omwaddon files will be overwritten without prompt so
REM make sure to enable backup by setting this value to 1
set "backup="

REM set value to 1 to add a date and time stamp to the end of the file name for
REM both the omwllf and delta output files, added before the extension, assumes
REM system date format ends with year, if you are located in the States change
REM value of american to 1 to adjust date
set "stamp="
set "american="

REM set value to 1 to run omwllf.py and delta_plugin.exe in silent mode,
REM neither will output anything to screen including errors, but this batch
REM file will still output to screen
set "silent="

REM set value to 1 to pause after each step to allow reading output
set "delay="

REM set value to 1 to open the generated validator log file after executing
REM openmw-validator command, it is recommended you use Notepad++ or another
REM 3rd-party text editor as the log file can get pretty large
set "openLog="

REM set value to 1 to delete the generated validator log file at end of the
REM execution
set "deleteLog="

REM location of android version of openmw.cfg on windows, can be a folder, if
REM file name not provided then openmw.cfg will be used, if left blank will
REM assume file name is openmw.cfg and located in the same folder as this
REM batch file, can be relative or absolute path
set "input="

REM location of windows version of openmw.cfg, all three apps will look for
REM openmw.cfg where windows openmw usually puts it, so leave this blank unless
REM you want to override defaults, if modified then no apps will run, if file
REM name not provided then openmw.cfg will be used, and if folder not provided
REM but file name is provided then will output file name in same folder as this
REM batch file
set "output="

REM location of Data Files folder on android, must match paths in openmw.cfg,
REM use /sdcard instead of /storage/emulated/0, no default value
set "folderData=/sdcard/Download/openmw/Morrowind/Data Files"

REM location of Data Files folder on windows, must already contain all base
REM game and expansion .bsa and .esm files, no default value
set "replaceData=D:\Morrowind\Data Files"

REM location of Mods folder on android, must match paths in openmw.cfg, use
REM /sdcard instead of /storage/emulated/0, no default value
set "folderMod=/sdcard/Download/openmw/Morrowind/Mod Files"

REM location of Mods folder on windows, must already contain all mods from the
REM android openmw.cfg in the same folder structure, including all .esm and
REM .esp files, no default value
set "replaceMod=D:\Morrowind\Mod Files"

REM name of folder for omwaddon files generated by omwllf and delta on windows,
REM has to match android openmw.cfg and must be inside Mods folder, can include
REM subfolders, if the omwaddon files are in the base Mods folder then just
REM leave blank
set "omwaddonFolder=LAST"

REM location of openmw-validator.exe, can be relative or absolute, this app
REM does not output to screen so check log for errors with your openmw.cfg
set "validatorDir=openmw-validator-1.7"

REM location of omwllf.py, can be relative or absolute path
set "omwllfDir=omwllf-master"

REM name of .omwaddon file generated by omwllf.py, outputs to omwaddonFolder,
REM file extension can be omitted but name must match name in android
REM openmw.cfg unless using the stamp option
set "omwllfOut=omwllf.omwaddon"

REM location of delta_plugin.exe, can be relative or absolute path
set "deltaDir=delta-plugin-0.17.1-windows-amd64"

REM name of .omwaddon file generated by delta_plugin.exe, outputs to
REM omwaddonFolder, file extension can be omitted but name must match name in
REM android openmw.cfg unless using the stamp option
set "deltaOut=delta.omwaddon"

setlocal enabledelayedexpansion

if "%input%" == "" set input=openmw.cfg
if not "%replaceMod:~-1%" == "\" set replaceMod=%replaceMod%\
if "%omwaddonFolder%" == "" set omwaddonFolder=/
if "%omwaddonFolder:~0,1%" == "\" set omwaddonFolder=%omwaddonFolder:~1%
if "%omwaddonFolder:~-1%" == "\" set omwaddonFolder=%omwaddonFolder:~0,-1%

if not "%input:~-4%" == ".cfg" set input=%input%\openmw.cfg
if not exist !input! (
	echo ^>^>^>^> !input! not found at expected location
	echo:
	pause & goto :eof
)

echo ^>^>^>^> !input! found
echo:

if not "%folderData:~0,1%" == "/" set folderData=/%folderData%
if not "%folderMod:~0,1%" == "/" set folderMod=/%folderMod%
if not "%folderMod:~-1%" == "/" set folderMod=%folderMod%/
set omwComb=%folderMod%%omwaddonFolder%
set addonComb=%replaceMod%%omwaddonFolder%
if not exist !addonComb! (
	echo ^>^>^>^> !addonComb! not found at expected location
	echo:
	pause & goto :eof
)

set outputPre=%userprofile%\Documents\My Games\OpenMW\
set outputMask=%outputPre%openmw.cfg
if "%output%" == "" set output=%outputMask%
if not "%output:~-4%" == ".cfg" set output=%output%\openmw.cfg

if "%backup%" == "1" (
	if exist "%output%" (
		copy "%output%" "%output%.bak" > NUL
		echo ^>^>^>^> backed up %output%
		echo:
	)
)

if "%omwllfOut:.omwaddon=%" == "%omwllfOut%" set omwllfOut=%omwllfOut%.omwaddon
if "%deltaOut:.omwaddon=%" == "%deltaOut%" set deltaOut=%deltaOut%.omwaddon

for /f "delims=" %%i in ('type "!input!" ^& break ^> "!output!" ') do (
	set "line=%%i"
	if not "!line:%omwComb%=!" == "!line!" set line=#
	if not "!line:%omwllfOut%=!" == "!line!" set line=#
	if not "!line:%deltaOut%=!" == "!line!" set line=#
	set replace=!line:%folderData%=%replaceData%!
	set replace=!replace:%folderMod%=%replaceMod%!
	set replace=!replace:/=\!
	>> "!output!" echo !replace!
)

echo ^>^>^>^> finished converting !output!
echo:

set returnDir=%cd%

if not "%output%" ==  "%outputMask%" (
	echo ^>^>^>^> output location modified, cannot run omwllf/delta
	goto end
)

if "%delay%" == "1" pause & echo:

if "%validatorDir:openmw-validator.exe=%" == "%validatorDir%"^
    set validatorDir=%validatorDir%openmw-validator.exe
if "%omwllfDir:omwllf.py=%" == "%omwllfDir%"^
    set omwllfDir=%omwllfDir%omwllf.py
if "%deltaDir:delta_plugin.exe=%" == "%deltaDir%"^
    set deltaDir=%deltaDir%delta_plugin.exe

for %%i in (%omwllfDir% %deltaDir% %validatorDir%) do (
	if not exist %%i (
		echo ^>^>^>^> %%i not found at expected location
		echo:
		pause & goto :eof
	)
)

if not "%validatorDir:openmw-validator.exe=%" == "%validatorDir%"^
    set validatorDir=%validatorDir:openmw-validator.exe=%
if not "%omwllfDir:omwllf.py=%" == "%omwllfDir%"^
    set omwllfDir=%omwllfDir:omwllf.py=%
if not "%deltaDir:delta_plugin.exe=%" == "%deltaDir%"^
    set deltaDir=%deltaDir:delta_plugin.exe=%

pushd %validatorDir%
echo ^>^>^>^> running openmw-validator.exe
echo:
set "validatorLog="
for /f "tokens=*" %%i in ('openmw-validator') do (set validatorLog=%%i)
set validatorLog=!validatorLog:Validation completed, log written to: =!
if %errorlevel% == 1 (
	echo:
	echo ^>^>^>^> error returned by openmw-validator.exe
	echo:
	pause & goto :eof
)
if "%openLog%" == "1" (
	start "" "%validatorLog%"
)
echo:
echo ^>^>^>^> openmw-validator.exe finished, log saved to: %validatorLog%
echo:

if "%stamp%" == "1" (
	set omwllfOut=%omwllfOut:.omwaddon=%
	set deltaOut=%deltaOut:.omwaddon=%
	if "%american%" == "1" (
		set datetime=%date:~6,4%%date:~0,2%%date:~3,2%-%time:~0,2%%time:~3,2%%time:~6,2%
	) else (
		set datetime=%date:~6,4%%date:~3,2%%date:~0,2%-%time:~0,2%%time:~3,2%%time:~6,2%
	)
	set omwllfOut=!omwllfOut!-!datetime!.omwaddon
	set deltaOut=!deltaOut!-!datetime!.omwaddon
)

if "%delay%" == "1" pause & echo:

set newDir=%replaceMod:"=%\%omwaddonFolder:"=%
if "%backup%" == "1" (
	pushd %newDir%
	if exist %omwllfOut% (
		copy %omwllfOut% %omwllfOut%.bak > NUL
		echo ^>^>^>^> backed up %omwllfOut%
		echo:
	)
	popd
)

cd %returnDir% & cd %omwllfDir%
echo ^>^>^>^> running omwllf.py
echo:
if "%silent%" == "1" (
	python omwllf.py -m %omwllfOut% -d ^"%newDir%^" > NUL
) else (
	python omwllf.py -m %omwllfOut% -d ^"%newDir%^"
)
if %errorlevel% == 1 (
	echo:
	echo ^>^>^>^> error returned by omwllf.py
	echo:
	pause & goto :eof
)
echo ^>^>^>^> %omwllfOut% written to %addonComb%
echo:

if "%delay%" == "1" pause & echo:

if "%backup%" == "1" (
	pushd %newDir%
	if exist %deltaOut% (
		copy %deltaOut% %deltaOut%.bak > NUL
		echo ^>^>^>^> backed up %deltaOut%
		echo:
	)
	popd
)

cd %returnDir% & cd %deltaDir%
echo ^>^>^>^> running delta_plugin.exe
echo:
if "%silent%" == "1" (
	delta_plugin -q merge ^"%newDir%\%deltaOut%^" > NUL
) else (
	delta_plugin merge ^"%newDir%\%deltaOut%^"
)

if %errorlevel% == 1 (
	echo:
	echo ^>^>^>^> error returned by delta_plugin.exe
	echo:
	pause & goto :eof
)
echo:
echo ^>^>^>^> %deltaOut% written to %addonComb%

if "%deleteLog%" == "1" del "%validatorLog%"

:end
echo:
echo ^>^>^>^> process finished
echo:
cd %returnDir% & pause
